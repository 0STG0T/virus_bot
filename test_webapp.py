#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ WebApp –ª–æ–≥–∏–∫–∏
"""
import asyncio
import sys
import os
from telethon import TelegramClient
from webapp_auth import WebAppAuth
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def test_webapp():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º WebApp –∫–ª–∏–∫"""

    # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—É—é —Å–µ—Å—Å–∏—é
    session_file = "sessions/+573181322034.session"
    session_name = "+573181322034"

    logger.info(f"üîß –ó–∞–≥—Ä—É–∂–∞—é —Å–µ—Å—Å–∏—é: {session_file}")

    # API credentials (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    api_id = 21724019
    api_hash = "41c33dd533d2dbe6fabe102831c8f208"

    client = TelegramClient(
        session_file.replace('.session', ''),
        api_id,
        api_hash,
        system_version="4.16.30-vxCUSTOM"
    )

    try:
        logger.info(f"üîå –ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ Telegram...")
        await client.connect()

        if not await client.is_user_authorized():
            logger.error(f"‚ùå –°–µ—Å—Å–∏—è –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∞!")
            return

        logger.info(f"‚úÖ –°–µ—Å—Å–∏—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∞")

        # –°–æ–∑–¥–∞–µ–º WebAppAuth
        auth = WebAppAuth(client, session_name)

        # –¢–µ—Å—Ç–æ–≤–∞—è —Å—Å—ã–ª–∫–∞ (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é –∏–∑ –ª–æ–≥–æ–≤)
        test_url = "https://t.me/jet_diceclub_bot/dapp?startapp=cfSbzBT4KPk"

        logger.info(f"\n{'='*70}")
        logger.info(f"üîó –¢–ï–°–¢ –ö–õ–ò–ö–ê –ü–û WEBAPP")
        logger.info(f"üåê URL: {test_url}")
        logger.info(f"{'='*70}\n")

        # –ö–ª–∏–∫–∞–µ–º
        success, init_data = await auth.click_test_spin_url(test_url)

        logger.info(f"\n{'='*70}")
        logger.info(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢: {'‚úÖ –£—Å–ø–µ—Ö' if success else '‚ùå –ù–µ—É–¥–∞—á–∞'}")
        if init_data:
            logger.info(f"üìù INIT_DATA: {init_data[:100]}...")
        else:
            logger.info(f"‚ÑπÔ∏è INIT_DATA: –ù–µ –ø–æ–ª—É—á–µ–Ω")
        logger.info(f"{'='*70}\n")

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}", exc_info=True)
    finally:
        await client.disconnect()
        logger.info(f"üëã –û—Ç–∫–ª—é—á–µ–Ω –æ—Ç Telegram")

if __name__ == "__main__":
    asyncio.run(test_webapp())
