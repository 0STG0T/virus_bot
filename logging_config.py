#!/usr/bin/env python3
"""
–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ (–û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–û –î–õ–Ø –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò)
–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ª–æ–≥–∏ –¥–ª—è GraphQL –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ–±—â–µ–π —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã
"""

import logging
import logging.handlers
import os
from datetime import datetime

def setup_logging():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ —Å —Ñ–æ–∫—É—Å–æ–º –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"""

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    try:
        from config import PERFORMANCE_MODE, REDUCED_LOGGING_MODE
    except ImportError:
        PERFORMANCE_MODE = False
        REDUCED_LOGGING_MODE = False

    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –ª–æ–≥–æ–≤ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    logs_dir = "./logs"
    if not os.path.exists(logs_dir):
        os.makedirs(logs_dir)

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –¥–ª—è –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤
    date_str = datetime.now().strftime("%Y-%m-%d")

    # === –û–ë–©–ï–ï –õ–û–ì–ò–†–û–í–ê–ù–ò–ï (–û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–û) ===

    # –û—Å–Ω–æ–≤–Ω–æ–π –ª–æ–≥–≥–µ—Ä
    root_logger = logging.getLogger()

    # –í —Ä–µ–∂–∏–º–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ WARNING+ –¥–ª—è –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏ –Ω–∞–≥—Ä—É–∑–∫–∏
    if PERFORMANCE_MODE:
        root_logger.setLevel(logging.WARNING)
    else:
        root_logger.setLevel(logging.INFO)

    # –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Ö—ç–Ω–¥–ª–µ—Ä—ã –µ—Å–ª–∏ –µ—Å—Ç—å
    for handler in root_logger.handlers[:]:
        root_logger.removeHandler(handler)

    # –û–±—â–∏–π —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä
    general_formatter = logging.Formatter(
        '%(asctime)s - %(name)s - %(levelname)s - %(message)s',
        datefmt='%Y-%m-%d %H:%M:%S'
    )

    # –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ–±—â–∏—Ö –ª–æ–≥–æ–≤ –≤ —Ñ–∞–π–ª
    general_file_handler = logging.FileHandler(
        f'{logs_dir}/general_{date_str}.log',
        encoding='utf-8'
    )
    general_file_handler.setLevel(logging.INFO)
    general_file_handler.setFormatter(general_formatter)
    root_logger.addHandler(general_file_handler)

    # –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏ (–º–µ–Ω–µ–µ –ø–æ–¥—Ä–æ–±–Ω—ã–π)
    console_handler = logging.StreamHandler()
    console_handler.setLevel(logging.INFO)
    console_formatter = logging.Formatter('%(levelname)s - %(name)s - %(message)s')
    console_handler.setFormatter(console_formatter)
    root_logger.addHandler(console_handler)

    # === GRAPHQL –õ–û–ì–ò–†–û–í–ê–ù–ò–ï (–£–°–õ–û–í–ù–û–ï –î–õ–Ø –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò) ===

    # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ª–æ–≥–≥–µ—Ä –¥–ª—è GraphQL –∑–∞–ø—Ä–æ—Å–æ–≤
    graphql_logger = logging.getLogger('graphql_requests')

    # –í —Ä–µ–∂–∏–º–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç–∫–ª—é—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ GraphQL –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    if PERFORMANCE_MODE:
        graphql_logger.setLevel(logging.CRITICAL)  # –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫–ª—é—á–µ–Ω–æ
    else:
        graphql_logger.setLevel(logging.INFO)

    graphql_logger.propagate = False  # –ù–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –ª–æ–≥–≥–µ—Ä

    # –ü–æ–¥—Ä–æ–±–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä –¥–ª—è GraphQL (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ)
    if not PERFORMANCE_MODE:
        graphql_formatter = logging.Formatter(
            '%(asctime)s - GraphQL - %(message)s',
            datefmt='%Y-%m-%d %H:%M:%S'
        )

        # –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è GraphQL –ª–æ–≥–æ–≤ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª
        graphql_file_handler = logging.FileHandler(
            f'{logs_dir}/graphql_{date_str}.log',
            encoding='utf-8'
        )
        graphql_file_handler.setLevel(logging.INFO)
        graphql_file_handler.setFormatter(graphql_formatter)
        graphql_logger.addHandler(graphql_file_handler)

    # === –†–û–¢–ê–¶–ò–Ø –õ–û–ì–û–í ===

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–æ—Ç–∞—Ü–∏—é –¥–ª—è –±–æ–ª—å—à–∏—Ö –ª–æ–≥–æ–≤ (–¥–ª—è production)
    rotating_handler = logging.handlers.RotatingFileHandler(
        f'{logs_dir}/virus_bot.log',
        maxBytes=50*1024*1024,  # 50MB
        backupCount=5,
        encoding='utf-8'
    )
    rotating_handler.setLevel(logging.INFO)
    rotating_handler.setFormatter(general_formatter)
    root_logger.addHandler(rotating_handler)

    # GraphQL —Ä–æ—Ç–∞—Ü–∏—è (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –≤ —Ä–µ–∂–∏–º–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏)
    if not PERFORMANCE_MODE:
        graphql_rotating_handler = logging.handlers.RotatingFileHandler(
            f'{logs_dir}/graphql_requests.log',
            maxBytes=100*1024*1024,  # 100MB (GraphQL –ª–æ–≥–∏ –±–æ–ª—å—à–µ)
            backupCount=3,
            encoding='utf-8'
        )
        graphql_rotating_handler.setLevel(logging.INFO)
        graphql_rotating_handler.setFormatter(graphql_formatter)
        graphql_logger.addHandler(graphql_rotating_handler)

    # === –î–ï–ë–ê–ì –õ–û–ì–ò–†–û–í–ê–ù–ò–ï (–¢–û–õ–¨–ö–û –í –û–ë–´–ß–ù–û–ú –†–ï–ñ–ò–ú–ï) ===

    # –û—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è debug –ª–æ–≥–æ–≤ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –≤ —Ä–µ–∂–∏–º–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏)
    if not PERFORMANCE_MODE:
        debug_handler = logging.FileHandler(
            f'{logs_dir}/debug_{date_str}.log',
            encoding='utf-8'
        )
        debug_handler.setLevel(logging.DEBUG)
        debug_formatter = logging.Formatter(
            '%(asctime)s - %(name)s:%(lineno)d - %(levelname)s - %(message)s'
        )
        debug_handler.setFormatter(debug_formatter)

        # –î–æ–±–∞–≤–ª—è–µ–º debug —Ö—ç–Ω–¥–ª–µ—Ä —Ç–æ–ª—å–∫–æ –∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º –ª–æ–≥–≥–µ—Ä–∞–º
        logging.getLogger('virus_api').addHandler(debug_handler)
        logging.getLogger('spin_worker').addHandler(debug_handler)

    # –í —Ä–µ–∂–∏–º–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    if PERFORMANCE_MODE:
        print("üöÄ PERFORMANCE MODE ACTIVATED - –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏")
    else:
        print("üìä NORMAL MODE - –ü–æ–ª–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏")

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É—Ä–æ–≤–Ω–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
    logging.getLogger('virus_api').setLevel(logging.DEBUG)
    logging.getLogger('spin_worker').setLevel(logging.INFO)
    logging.getLogger('telegram_bot').setLevel(logging.INFO)

    # –£–º–µ–Ω—å—à–∞–µ–º –±–æ–ª—Ç–ª–∏–≤–æ—Å—Ç—å —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
    logging.getLogger('aiohttp').setLevel(logging.WARNING)
    logging.getLogger('telethon').setLevel(logging.WARNING)
    logging.getLogger('telegram').setLevel(logging.WARNING)
    logging.getLogger('httpx').setLevel(logging.WARNING)

    print(f"üìù –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ:")
    print(f"   ‚Ä¢ –û–±—â–∏–µ –ª–æ–≥–∏: {logs_dir}/general_{date_str}.log")
    print(f"   ‚Ä¢ GraphQL –ª–æ–≥–∏: {logs_dir}/graphql_{date_str}.log")
    print(f"   ‚Ä¢ Debug –ª–æ–≥–∏: {logs_dir}/debug_{date_str}.log")
    print(f"   ‚Ä¢ –†–æ—Ç–∏—Ä—É—é—â–∏–µ –ª–æ–≥–∏: {logs_dir}/virus_bot.log + {logs_dir}/graphql_requests.log")

def get_graphql_logger():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π GraphQL –ª–æ–≥–≥–µ—Ä"""
    return logging.getLogger('graphql_requests')

def get_api_logger():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π API –ª–æ–≥–≥–µ—Ä"""
    return logging.getLogger('virus_api')

if __name__ == "__main__":
    # –¢–µ—Å—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    setup_logging()

    logger = logging.getLogger(__name__)
    graphql_logger = get_graphql_logger()

    logger.info("–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ–±—â–∏–π –ª–æ–≥")
    graphql_logger.info("–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ GraphQL –ª–æ–≥")

    print("‚úÖ –¢–µ—Å—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É logs/")