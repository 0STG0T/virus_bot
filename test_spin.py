#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—Ä–∏ —Å–ø–∏–Ω–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π testSpin –∫–ª–∏–∫–∞
"""
import asyncio
import sys
from spin_worker import SpinWorker
from session_manager import SessionManager
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def test_spin():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—Ä–∏ —Å–ø–∏–Ω —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π testSpin"""

    # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—É—é —Å–µ—Å—Å–∏—é
    session_file = "sessions/+573181322034.session"
    session_name = "+573181322034"

    logger.info(f"üé∞ –¢–µ—Å—Ç–∏—Ä—É—é —Ñ—Ä–∏ —Å–ø–∏–Ω –¥–ª—è —Å–µ—Å—Å–∏–∏: {session_name}")
    logger.info(f"=" * 70)

    # –°–æ–∑–¥–∞–µ–º SessionManager
    session_manager = SessionManager()

    worker = SpinWorker(session_manager)

    try:
        result = await worker.perform_single_spin(session_name)

        logger.info(f"\n{'=' * 70}")
        logger.info(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –°–ü–ò–ù–ê")
        logger.info(f"={'=' * 70}")
        logger.info(f"‚úÖ –£—Å–ø–µ—Ö: {result['success']}")
        logger.info(f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ: {result['message']}")
        if result.get('prize'):
            logger.info(f"üéÅ –ü—Ä–∏–∑: {result['prize']}")
        logger.info(f"{'=' * 70}\n")

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}", exc_info=True)

if __name__ == "__main__":
    asyncio.run(test_spin())
