#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∑–≤–µ–∑–¥
"""

def test_activation_logic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∑–≤–µ–∑–¥"""
    MIN_INVENTORY_STARS = 100

    test_cases = [
        # (inventory_value, expected_to_activate, description)
        (50, 0, "< 100‚≠ê –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ - –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º"),
        (99, 0, "99‚≠ê –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ - –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º"),
        (100, 0, "–†–æ–≤–Ω–æ 100‚≠ê - –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º (–æ—Å—Ç–∞–≤–ª—è–µ–º –º–∏–Ω–∏–º—É–º)"),
        (150, 50, "150‚≠ê –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ - –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º 50‚≠ê (–æ—Å—Ç–∞–≤–ª—è—è 100‚≠ê)"),
        (200, 100, "200‚≠ê –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ - –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º 100‚≠ê (–æ—Å—Ç–∞–≤–ª—è—è 100‚≠ê)"),
        (350, 250, "350‚≠ê –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ - –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º 250‚≠ê (–æ—Å—Ç–∞–≤–ª—è—è 100‚≠ê)"),
        (1000, 900, "1000‚≠ê –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ - –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º 900‚≠ê (–æ—Å—Ç–∞–≤–ª—è—è 100‚≠ê)"),
    ]

    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∑–≤–µ–∑–¥\n")
    print(f"üìã –ú–∏–Ω–∏–º—É–º –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ: {MIN_INVENTORY_STARS}‚≠ê\n")

    all_passed = True

    for inventory_value, expected_to_activate, description in test_cases:
        # –õ–æ–≥–∏–∫–∞ –∏–∑ activate_all_stars
        if inventory_value < MIN_INVENTORY_STARS:
            stars_to_activate_value = 0
        else:
            stars_to_activate_value = inventory_value - MIN_INVENTORY_STARS

        remaining_in_inventory = inventory_value - stars_to_activate_value

        passed = stars_to_activate_value == expected_to_activate
        status = "‚úÖ" if passed else "‚ùå"

        if not passed:
            all_passed = False

        print(f"{status} {description}")
        print(f"   –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å: {inventory_value}‚≠ê")
        print(f"   –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º: {stars_to_activate_value}‚≠ê (–æ–∂–∏–¥–∞–ª–æ—Å—å: {expected_to_activate}‚≠ê)")
        print(f"   –û—Å—Ç–∞—Ç–æ–∫: {remaining_in_inventory}‚≠ê")
        print()

    if all_passed:
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã!")
        print("\nüí° –õ–æ–≥–∏–∫–∞:")
        print("   - –ï—Å–ª–∏ < 100‚≠ê –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ: –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –Ω–∏—á–µ–≥–æ")
        print("   - –ï—Å–ª–∏ >= 100‚≠ê: –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∏–∑–±—ã—Ç–æ–∫ (inventory - 100‚≠ê)")
        print("   - –í—Å–µ–≥–¥–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º –º–∏–Ω–∏–º—É–º 100‚≠ê –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ –¥–ª—è —Ü–µ–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤")
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã!")

    return all_passed

if __name__ == "__main__":
    test_activation_logic()
